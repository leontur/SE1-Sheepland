package game.server.controller;

import static org.junit.Assert.*;

import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.List;

import game.server.model.Game;
import game.server.model.Player;
import game.server.model.Shepherd;
import game.server.view.Console;
import game.server.view.ViewerInterface;

import org.junit.Test;

/**
* Turn executor-test class
* 
* @author Dario
*/
public class TurnExecutorTest {
	
	private Game tester = new Game();

	/**
	 * Check the player's turn
	 * @throws RemoteException
	 */
	@Test
	public void playersTurnTest() throws RemoteException {
		
		//VARS
		int playerCounter= 1;
		Game game = new Game();
		ViewerInterface clientView = new Console(game);
		int move = 1;
		boolean isTest = true;
		
		//EXE
		TurnExecutor.playersTurn(playerCounter, game, clientView, move, isTest);
		
		//CHECK
		if(tester.getCurrentPlayerCounter() == playerCounter){
			assertTrue(true);
		}
	}

	/**
	 * Check the shepherd selected for the current turn
	 */
	@Test
	public void selectShepherdForTurnTest(){
		
		//vars
		Player player = new Player();
		Game game = new Game();
		ViewerInterface mainGameViewer = new Console(game);
		boolean isTest = true;
		List<Shepherd> shList = new ArrayList<Shepherd>();
		
		//setting
		game.setPlayersNumber(4);
		shList.add(new Shepherd(0, null));
		shList.add(new Shepherd(1, null));
		player.assignShepherdToPlayer(shList.get(0));
		player.assignShepherdToPlayer(shList.get(1));
		
		//exe
		Shepherd retSh = TurnExecutor.selectShepherdForTurn(player, game, mainGameViewer, isTest);
		
		//check
		assertEquals(shList.get(0), retSh);
	}

	
}

