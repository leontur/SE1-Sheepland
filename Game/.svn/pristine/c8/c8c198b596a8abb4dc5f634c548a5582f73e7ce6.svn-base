package game.client.view;

import game.client.Manage;

import java.io.File;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;

/**
 * LET THE CLIENT CHOOSING CONNECTION MODE
 * 	-RMI
 * 	-SOCKET
 * with a window on screen
 * 
 * @author Leonardo
 *
 */
public class ConnectionModeSelection extends JFrame implements Runnable {

	/**
	 * VARS
	 */
	private static int pointX;
	private static int pointY;
	private static final long serialVersionUID = 1L;
	
	//rmi rectangle area
	private int areaAX = 50;
	private int areaAY = 190;
	private int areaDX = 200;
	private int areaDY = 260;
	//socket rectangle area
	private int translationX = 270;
	private int translationY = 0;
	
	//window definition
	private JLabel backgroundLbl;
	private JLayeredPane layeredPane;
	
	/**
	 * GUI REQUEST
	 * FOR CONNECTION MODE
	 * @return
	 */
	public void run() {
		
		try{
			
			//window definition
			setResizable(false);
			setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			setTitle("Sheepland | Group 14 | Turchi - Rosolia");
			setSize(548, 320 + getInsets().top);
			
			//layers			
			layeredPane = new JLayeredPane();
			setContentPane(layeredPane);
			
			//background
			backgroundLbl = new JLabel(new ImageIcon(ImageIO.read(new File("./resources/img/connection_selection.gif"))));
			backgroundLbl.setBounds(0, 0, 542, 291);
			add(backgroundLbl);
			layeredPane.setLayer(backgroundLbl, 5);
			
			//listener
			layeredPane.addMouseListener(new ConnectionModeSelectionListener(this));
			
			//show
			setVisible(true);
			
		}catch(Exception e){
			;
		}
		
	}
	

	/////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	/**
	 * EXECUTOR
	 */	
	public void setCoords(int x, int y){
		
		pointX = x;
		pointY = y;	
		
		int req = 0;
		
		//check coords 
		if(
			(pointX >= areaAX && pointX <= areaDX)
			&&
			(pointY >= areaAY && pointY <= areaDY)
			){
			
			//if click is in rmi area, set 1
			req = 1;
			
		}else if(
			(pointX >= areaAX+translationX && pointX <= areaDX+translationX)
			&&
			(pointY >= areaAY+translationY && pointY <= areaDY+translationY)
			){
			
			//if click is in socket area, set 2
			req = 2;
				
		}else{
			req = 0;
		}
		
		//SEND COMMAND MODE
		if(req!=0){
			
			//hide window
			setVisible(false);
			
			//set to manage		
			Manage.setMode(req);
			
		}
		
		//debug
		//System.out.println("fired   x " + x + "  y " + y + "   req "+ req);
	}
	
}
